<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>