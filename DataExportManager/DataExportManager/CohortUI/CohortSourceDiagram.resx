<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARQAAAChCAMAAAAx3rA5AAAABGdBTUEAALGPC/xhBQAAAwBQTFRFAAAA
        BwkLFRwiJiYmf39/QXGcSnihXYetW5vVW5vbW5vjW6zqW73xeZvVeZvbec/4lZvVlZvjsazVld//sd//
        se//zL3VzN/xzN//zP/4zP//5s/b/9/j5u/45v///+/q/+/4///x///4////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs80quAAAAAlwSFlzAAAO
        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
        Zw4AAAAASUVORK5CYII=
</value>
  </data>
</root>