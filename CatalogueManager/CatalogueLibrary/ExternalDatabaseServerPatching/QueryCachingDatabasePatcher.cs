using System.Reflection;

namespace CatalogueLibrary.ExternalDatabaseServerPatching
{
    /// <summary>
    /// Documents the relationship between the patching and database assemblies of the Query Caching system of Cohort Builder.  Query caching is how we handle
    /// SET operations (INTERSECT / UNION / EXCEPT) between many large complex subqueries which would not execute efficiently in Sql Server.  The Query cache
    /// records the SQL generated by CohortQueryBuilder and the resulting identifier list with an index so that set operations can be redirected to the cache
    /// and execute at lightning speed.
    /// </summary>
    public class QueryCachingDatabasePatcher:IPatcher
    {
        /// <inheritdoc/>
        public Assembly GetHostAssembly()
        {
            return Assembly.Load("QueryCaching");
        }

        /// <inheritdoc/>
        public Assembly GetDbAssembly()
        {
            return Assembly.Load("QueryCaching.Database");
        }
    }
}